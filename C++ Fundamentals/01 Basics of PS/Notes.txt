Brain teaser : Hour glass puzzle:
    you have two hour glasses : a 7 mins one and a 11 mins one.
    using just 2 hours glass, accuractely time 15 minutes

Solution 1 :

1) start with both the hour glasses parallely.
2) once the 7 mins one gets over, start noting the timer.
3) after 4 minutes the 11 mins one will get over.
4) flip the 11 mins ones and again let the 11 mins countdown begin.
5) end time will be when 11 mins are over.
6) so total time measured is 15 mins (11 - 7) + 11 = 15.

Solution 2 :

1) start with both the hour glasses parallely. --> mark this as the starting time.
2) once the 7 mins get over. flip it.
3) once the 11 mins one gets over, out of 7 mins 4 mins would have gone down with 3 mins remaining.
4) now flip the 7 mins one, this time 4 mins comes up and 3 mins goes down.
5) hence by the end of the seond one : 11 mins + 4 mins = 15 mins.

Solution 2 is better than solution 1 as we are only consuming 15 mins exactly contrary to 22 mins in the former case.

So, moral of the story is Problem solving is always about optimizing the solution.

Pseudocode :

1) Human readable informal description of the algorithm or program
2) language independent
3) structure your code before writing it
4) fastest way to verify
5) a flowchart could easily be converted to pseudocode

Pseudocode Language :

1) input --> [read N]
2) assignment --> [Sum <- 0]
3) output --> [print Sum]
4) if else --> [if i < N then .... end else then .... end]
5) while loop --> [while i < n do ... end]
6) exit --> [exit]

Prime numbers pseudocode :

    read n
    i <- 2 
    while(i < N) do
        if N % i == 0
        then 
            print "not prime"
            exit
        end
    i <- i + 1
    end
    print "prime"
    exit

Pattern pseudocode :

pattern :
1
2 3
4 5 6
7 8 9 10

observations :
if n = 4 then print 4 rows
print i numbers in the ith rows
value of the number is linearly incremented

pseudocode :

read N
row <- 1
val <- 1
col <- 1

while row <= N do 
    col <- 1
    while col <= row do
        print val
        val <- val + 1
        col <- col + 1
    end
print "\n"
row < row + 1
end
exit


Brainteaser : Circular jail cell:

there is a circular jail with 100 cells numbered 1-100.
each cell has an inmate and the door is locked.
one night the jailer gets drunk and starts running around the jail in circles
in the first round he opens all the doors
in the second round he visits every 2nd door(2, 4, 6 ...) and reverses the state. ie. open --> close and vice-versa
in the third round he visits every 3rd door(3, 6, 9, ...) and reverses the state.
...
This continues for 100 rounds and exhausted the jailer falls down.

How many prisoners found their doors open after 100 rounds ?

Solution :

door d will be open if the prisoner comes to the door odd number of times.
ex door 12 --> round 1, 2, 3, 4, 6, 12 ie. 6 times. the door will be closed

so we want to find those numbers which have odd number of divisors. 
Note : these divisors occur in pairs.

for perfect squares : ex 36 : 1, 2, 3, 4, 6, 9, 12, 18, 36 --> odd number of divisors
                         here 6 will be paired with itself hence we obtain odd number of divisors

So perfect squares in 1 to 100 : 1, 4, 9, 16, 25, 36, 49, 64, 81, 100.

Therefore, these 10 doors will remain open after 100 rounds 


Brainteaser : Infinite coins

you are wearing a blindfold and thick gloves. An infinite number of coins are laid out before you on a table of infinite area.
Someone tells you that, 20 of these coins are tails and rest all are heads. He says that if you can split the coins into 2 piles
where the number of tails is same in both the piles, then you win all of the coins. 
You are allowed to move the coins and to flip them over, but you can never tell what state a coin is currently in.

How do you partition the coins so that you can win them all ?

Solution : 

1) pick any 20 coins
2) in this set of 20 coins lets assume we have 0 <= x <= 20 tails.
3) in the other set you have 20 - x tails.
4) now flip these 20 coins, now you will obtain 20 - x tails.

You can observe that the number of tails exactly equal in both the parts

